#!/usr/bin/env python3
# coding: utf-8
# pypodget - a consise tool to download podcasts from rss-feeds
# Copyright (C) 2022 Martin Koehler
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import requests
import xml.etree.ElementTree as ElementTree
import unicodedata
from datetime import datetime
import os.path
import os
import sys
import tqdm
import configparser
from string import Template
import argparse
import eyed3

from pypodget import pod_download, set_verbose, Podcast

# Default Settings
DEFAULT_FILENAME_TEMPLATE = "$year-$month-$day - $title.$ext"


def main():

    # Parse the command line
    parser = argparse.ArgumentParser(description='Download Podcasts from RSS Feeds.')
    parser.add_argument('--config', '-c', nargs = 1, required=True, help = 'Specify the configfile')
    parser.add_argument('--silent', '-s', action = 'store_true', default = False, help = 'Silent operation')
    parser.add_argument('--version', '-v',  action='version', version='%(prog)s 0.1.1')
    args = parser.parse_args()

    global verbose
    verbose = not args.silent
    set_verbose(verbose)

    configfile = args.config[0]

    if not os.path.isfile(configfile):
        print ('Failed to open configfile {:s}'.format(configfile))
        sys.exit(-1)



    # Read the configfile
    config = configparser.ConfigParser()
    config.read(configfile)


    for pod in config.sections():
        if pod == "settings":
            continue

        try:
            url = config[pod]["url"]
            directory = config[pod]["directory"]
        except Exception as err:
            print("Mandatory key missing")
            print(err)

        if "filename" in config[pod]:
            filename_template = config[pod]["filename"]
        else:
            filename_template = DEFAULT_FILENAME_TEMPLATE

        try:
            p =  Podcast(url, pod, directory, filename_template)
        except:
            print("Failed to obtain podcast {:s} - {:s}".format(pod, url))
            continue

        for i in range(0, p.nepisodes):
            try:
                p.download(i)
            except Exception as e:
                print("Download {:s} - Episode {:d} failed. Continue.".format(pod, i))
                print(str(e))
                continue

if __name__ == "__main__":
    main()
